<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinletu.core.mapper.CoreMapper">
    
    <resultMap type="com.xinletu.core.domain.CoreEntity" id="CoreResult">
        <id     property="id"          column="id"           />
        <result property="name"        column="name"         />
        <result property="description" column="description"  />
        <result property="status"      column="status"       />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"  column="create_time"  />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"  column="update_time"  />
        <result property="remark"      column="remark"       />
    </resultMap>
    
    <!-- 此处实际项目中需要替换为真实表名和字段 -->
    <sql id="selectCoreVo">
        select id, name, description, status, create_by, create_time, update_by, update_time, remark
        from core_entity
    </sql>
    
    <!-- 以下SQL仅作示例，实际项目中需要根据实际表结构进行修改 -->

    <select id="selectCoreList" parameterType="com.xinletu.core.domain.CoreEntity" resultMap="CoreResult">
        <include refid="selectCoreVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectCoreById" parameterType="Long" resultMap="CoreResult">
        <include refid="selectCoreVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCore" parameterType="com.xinletu.core.domain.CoreEntity" useGeneratedKeys="true" keyProperty="id">
        insert into core_entity
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="description != null">description,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="description != null">#{description},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateCore" parameterType="com.xinletu.core.domain.CoreEntity">
        update core_entity
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCoreById" parameterType="Long">
        delete from core_entity where id = #{id}
    </delete>

    <delete id="deleteCoreByIds" parameterType="String">
        delete from core_entity where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper> 